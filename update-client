#!/bin/sh
#
# set this script in your ~/.ssh/authorized_keys as
# command="/path/to/update-client <HOSTNAME>" <KEY>
# to only allow calls to this script for that key
#

# where are we?
BASEDIR=/home/dns-update

# where to put the new zone file
ZONEFILE="$BASEDIR"/zones/dynip.example.com.zone

# where to put the source snippets
HOSTS_DIR="$BASEDIR"/hosts

# combined host entry files
HOSTS_CUR="$HOSTS_DIR"/allhosts.cur
HOSTS_NEW="$HOSTS_DIR"/allhosts.new

# currently, the hostname is tied to the SSH key via authorized_keys
# TODO: this could also be a parameter from the client to support multiple hosts per key
HOSTNAME="$1"

# get parameters from client
set -- $SSH_ORIGINAL_COMMAND

# check for the first argument to be something like update-client, with or without path
case "$1" in
    *update-client)
        ;;
    *)
        echo "need 'update-client' as first parameter"
        exit 1
        ;;
esac

# the second parameter is the new IP ADDRESS
# (simple) validation is done later by the zone generator
IPADDRESS="$2"

# automatic IP ADDRESS detection:
# use connection source ip
if [ "$IPADDRESS"x = "auto"x ] ; then
    set -- $SSH_CONNECTION
    IPADDRESS=$1
fi

# some simple sanity checks
if [ "$HOSTNAME"x = "x" ] ; then
    echo "no hostname given"
    exit 1
fi
if [ "$IPADDRESS"x = "x" ] ; then
    echo "no IP address given"
    exit 1
fi


# write client IP to snippet file
echo "$IPADDRESS" > "$HOSTS_DIR/$HOSTNAME"

# combine snippet files
grep -HE '^[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}$' "${HOSTS_DIR}"/* \
| sort \
| sed 's/:/ /' \
> "$HOSTS_NEW"

# create current combined file if absent, otherwise mark as updated
touch "$HOSTS_CUR"

# check for changes to process
if cmp -s "$HOSTS_NEW" "$HOSTS_CUR" ; then

    # new file is uneccessary
    rm "$HOSTS_NEW"

else

    # declare new file as current file
    mv "$HOSTS_NEW" "$HOSTS_CUR"

    # update the zonefile
    $BASEDIR/generate-zone "$ZONEFILE" "$HOSTS_DIR"

    # reload the nameserver
    sudo /etc/init.d/nsd3 reload

fi
